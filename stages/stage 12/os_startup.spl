loadi(65,7);
loadi(66,8);

loadi(4, 17);
loadi(5, 18);

loadi(22,35);
loadi(23,36);

loadi(2, 15);
loadi(3, 16);

loadi(63,13);
loadi(64,14);

loadi(4, 17);
loadi(5, 18);

//loading the idle process code
loadi(69,11);
loadi(70,12);

//load write systemcall 
loadi(16,29);
loadi(17,30);


//setting pagetable entries for idle process
PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10;

//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


[81 * 512] = [69*512 + 1];

[PROCESS_TABLE + 1] = 0; //PID
[PROCESS_TABLE + 4] = "CREATED"; //State of the process
[PROCESS_TABLE + 11] = 82; //user area page number
[PROCESS_TABLE + 12] = 0; //KPTR value
[PROCESS_TABLE + 13] = 8*512; //UPTR value
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;



//setting page table entries for init process
PTBR = PAGE_TABLE_BASE + 20; //as PID of idle process is 1
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65 * 512 + 1];

SP = 8*512;
[SYSTEM_STATUS_TABLE + 1] = 1; //current PID

//process table # s9
[PROCESS_TABLE + 16 + 1] = 1; //PID
[PROCESS_TABLE + 16 + 4] = RUNNING; //State of the process
[PROCESS_TABLE + 16 + 11] = 80; //user area page number
[PROCESS_TABLE + 16 + 12] = 0; //KPTR value
[PROCESS_TABLE + 16 + 13] = 8*512; //UPTR value
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;



ireturn;
